pipeline {
    agent any
    stages {
        stage('拉取数据库') {
            steps {
                git branch: 'bxr', url: 'https://github.com/werwerTrain/database-2.git'
                echo '拉取成功'
            }
        }
        stage('删除旧容器'){
            steps{
            bat'''
                kubectl delete -f Food/k8s/food-deployment.yaml || true
                kubectl delete -f Food/k8s/food-service.yaml || true
            '''
                powershell '''
                $containers = docker ps -q --filter "ancestor=bxr0820/food:latest"
                foreach ($container in $containers) {
                    Write-Output "Stopping container $container"
                    docker stop $container
                }

                $allContainers = docker ps -a -q --filter "ancestor=bxr0820/food:latest"
                foreach ($container in $allContainers) {
                    Write-Output "Removing container $container"
                    docker rm $container
                }
                '''
                bat 'docker rmi -f bxr0820/food:latest || true'
            }
        }
        stage('构建新容器'){
            steps{
                bat 'docker build -t bxr0820/food ./food'
                echo '构建成功'
            }
        }

        stage('推送远程镜像') {
            steps {
                script {
                        bat '''
                        echo buxinran123| docker login -u bxr0820 --password-stdin
                        docker push bxr0820/food:latest
                        '''
                }
            }
        }
        
        stage('重新部署到k8s'){
            steps{
                bat '''
                kubectl apply -f Food/k8s/food-deployment.yaml
                kubectl apply -f Food/k8s/food-service.yaml
                '''
                echo '部署成功'
            }
        }
    }

    post {
        always {
            // 这里可以添加一些清理步骤，例如清理工作目录或通知
            bat 'docker system prune -f'
        }
        success {
            echo 'Build and deployment succeeded!'
        }
        failure {
            echo 'Build or deployment failed.'
        }
    }
}